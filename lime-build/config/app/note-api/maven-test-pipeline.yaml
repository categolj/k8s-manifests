apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven-test-pipeline
  namespace: note
  labels:
    apps.tanzu.vmware.com/pipeline: test
    apps.tanzu.vmware.com/language: java
spec:
  params:
  - name: source-url
  - name: source-revision
  - name: slack-webhook-secret
  - name: slack-test-failure-message
  tasks:
  - name: test
    params:
    - name: source-url
      value: $(params.source-url)
    - name: source-revision
      value: $(params.source-revision)
    taskSpec:
      volumes:
      - name: dind-storage
        emptyDir: { }
      - name: dind-socket
        emptyDir: { }
      - name: settings-xml
        secret:
          secretName: settings-xml
      params:
      - name: source-url
      - name: source-revision
      sidecars:
      - name: docker
        image: docker:20.10-dind
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: dind-storage
        - mountPath: /var/run/
          name: dind-socket
      steps:
      - name: test
        image: bellsoft/liberica-openjdk-debian:21
        volumeMounts:
        - mountPath: /var/run/
          name: dind-socket
        - mountPath: /opt/maven
          name: settings-xml
          readOnly: true
        script: |-
          set -ex
          cd `mktemp -d`
          curl -s $(params.source-url) | tar -m -xzvf -
          ./mvnw clean test -V -s /opt/maven/settings.xml --no-transfer-progress
  finally:
  - name: notify-test-failure
    when:
    - input: $(tasks.test.status)
      operator: in
      values: [ "Failed" ]
    taskRef:
      kind: ClusterTask
      name: send-to-webhook-slack
    params:
    - name: webhook-secret
      value: $(params.slack-webhook-secret)
    - name: message
      value: $(params.slack-test-failure-message)
