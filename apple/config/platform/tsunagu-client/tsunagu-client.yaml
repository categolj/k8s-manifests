#@ load("@ytt:data", "data")
apiVersion: v1
kind: Namespace
metadata:
  name: tsunagu
---
apiVersion: v1
kind: Secret
metadata:
  name: tsunagu
  namespace: tsunagu
type: Opaque
stringData:
  token: #@ data.values.tsunagu.token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tsunagu-client
  name: tsunagu-client
  namespace: tsunagu
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tsunagu-client
  template:
    metadata:
      labels:
        app: tsunagu-client
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/scrape: "true"
        prometheus.io/port: "8084"
    spec:
      containers:
      - name: tsunagu-client
        image: ghcr.io/making/tsunagu-client:sd-2022-04
        env:
        - name: SPRING_CONFIG_IMPORT
          value: configtree:/config/
        - name: TSUNAGU_REMOTE
          value: wss://tsunagu.ik.am/tsunagu
        - name: TSUNAGU_UPSTREAM
          value: https://gateway.gateway.svc.cluster.local:443
        - name: TSUNAGU_PRESERVE_HOST
          value: "true"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: info,health,prometheus
        resources:
          limits:
            memory: "256Mi"
          requests:
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8084
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8084
        volumeMounts:
        - name: tsunagu
          mountPath: /config/tsunagu
          readOnly: true
      volumes:
      - name: tsunagu
        secret:
          secretName: tsunagu
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: tsunagu-client
  namespace: tsunagu
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: tsunagu-client
