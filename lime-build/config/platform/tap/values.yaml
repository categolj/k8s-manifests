#@ load("@ytt:data", "data")
apiVersion: v1
kind: Secret
metadata:
  name: tap-tap-install-values
  namespace: tap-install
  annotations:
    kapp.k14s.io/change-group: "tap-install-values"
type: Opaque
stringData:
  #@yaml/text-templated-strings
  tap-values.yml: |
    ---
    profile: build

    ceip_policy_disclosed: true

    buildservice:
      kp_default_repository: (@= data.values.registry_credentials.server @)/(@= data.values.registry_credentials.username @)/build-service
      kp_default_repository_secret:
        name: registry-secret
        namespace: tap-install  
      #! exclude_dependencies: true

    supply_chain: testing_scanning
    
    ootb_templates:
      ingress_domain: run.lime.maki.lol
      ingress_issuer: letsencrypt

    ootb_supply_chain_testing_scanning:
      #! cluster_builder: base-jammy
      registry:
        server: (@= data.values.registry_credentials.server @)
        repository: (@= data.values.registry_credentials.username @)/supply-chain
      gitops:
        branch: lime
        username: making-bot
        email: makingx+bot@gmail.com
        ssh_secret: ""
        user_name: making-bot
        user_email: makingx+bot@gmail.com
        commit_message: Bump    
        commit_strategy: pull_request
        server_address: https://github.com
        repository_owner: categolj
        repository_name: tap-gitops 
        pull_request:
          server_kind: github
          commit_branch: ""
          pull_request_title: "ready for review"
          pull_request_body: "generated by ootb_supply_chain_testing"  

    scanning:
      metadataStore:
        url: "" # Disable embedded integration since it's deprecated
    
    grype:
      metadataStore:
        url: https://metadata-store.view.lime.maki.lol
        caSecret:
          name: store-ca-cert
          importFromNamespace: metadata-store-secrets
        authSecret:
          name: store-auth-token
          importFromNamespace: metadata-store-secrets

    springboot_conventions:
      autoConfigureActuators: true
    
    namespace_provisioner:
      controller: true
      additional_sources:
      - inline:
          paths:
            git-basic.yaml: |
              ---
              apiVersion: v1
              kind: Secret
              metadata:
                name: git-basic
                annotations:
                  tekton.dev/git-0: https://github.com
              type: kubernetes.io/basic-auth
              stringData:
                username: "(@= data.values.github.username @)"
                password: "(@= data.values.github.api_token @)"
        path: _ytt_lib/git-basic
      - inline:
          paths:
            skip-test-pipeline.yaml: |
              ---
              apiVersion: tekton.dev/v1beta1
              kind: Pipeline
              metadata:
                name: skip-test-pipeline
                namespace: blog
                labels:
                  apps.tanzu.vmware.com/pipeline: test
                  apps.tanzu.vmware.com/language: skip
              spec:
                params:
                - name: source-url
                - name: source-revision
                tasks:
                - name: test
                  params:
                  - name: source-url
                    value: $(params.source-url)
                  - name: source-revision
                    value: $(params.source-revision)
                  taskSpec:
                    params:
                    - name: source-url
                    - name: source-revision
                    steps:
                    - name: test
                      image: alpine
                      script: |-
                        echo 'skip'
        path: _ytt_lib/testing
      - inline:
          paths:
            scan-policy.yaml: |
              ---
              apiVersion: scanning.apps.tanzu.vmware.com/v1beta1
              kind: ScanPolicy
              metadata:
                labels:
                  app.kubernetes.io/part-of: enable-in-gui
                name: scan-policy
                namespace: demo
              spec:
                regoFile: |
                  package main
              
                  # Accepted Values: "Critical", "High", "Medium", "Low", "Negligible", "UnknownSeverity"
                  notAllowedSeverities := ["UnknownSeverity"]
              
                  ignoreCves := ["GHSA-mjmj-j48q-9wg2", "CVE-2023-0286"]
              
                  contains(array, elem) = true {
                    array[_] = elem
                  } else = false { true }
              
                  isSafe(match) {
                    severities := { e | e := match.ratings.rating.severity } | { e | e := match.ratings.rating[_].severity }
                    some i
                    fails := contains(notAllowedSeverities, severities[i])
                    not fails
                  }
              
                  isSafe(match) {
                    ignore := contains(ignoreCves, match.id)
                    ignore
                  }
              
                  deny[msg] {
                    comps := { e | e := input.bom.components.component } | { e | e := input.bom.components.component[_] }
                    some i
                    comp := comps[i]
                    vulns := { e | e := comp.vulnerabilities.vulnerability } | { e | e := comp.vulnerabilities.vulnerability[_] }
                    some j
                    vuln := vulns[j]
                    ratings := { e | e := vuln.ratings.rating.severity } | { e | e := vuln.ratings.rating[_].severity }
                    not isSafe(vuln)
                    msg = sprintf("CVE %s %s %s", [comp.name, vuln.id, ratings])
                  }
        path: _ytt_lib/scanning
      - inline:
          paths:
            add-git-basic.lib.yaml: |
              #@ load("@ytt:overlay", "overlay")
    
              #@ def customize():
              #@overlay/match by=overlay.subset({"kind": "ServiceAccount", "metadata": {"name": "default"}}), expects="0+"
              ---
              secrets:
              - name: git-basic
              #@ end
        path: _ytt_lib/customize

    package_overlays:
    - name: tap-telemetry
      secrets:
      - name: tap-telemetry-remove
    - name: ootb-templates
      secrets:
      #! - name: ootb-templates-cache-workspace
      - name: ootb-templates-overlay-replicas
      - name: ootb-templates-overlay-probes
      - name: ootb-templates-overlay-ingress
    - name: ootb-supply-chain-testing-scanning
      secrets:
      - name: ootb-supply-chain-testing-scanning-remove-source-scanner
    - name: tekton-pipelines
      secrets:
      - name: tekton-pipelines-prometheus
      - name: tekton-send-to-webhook-slack
      - name: tekton-triggers-release
      - name: tekton-triggers-interceptors

    excluded_packages:
    #! - grype.scanning.apps.tanzu.vmware.com
    - contour.tanzu.vmware.com