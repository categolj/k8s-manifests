#@ load("@ytt:data", "data")

#@ namespace = "blog{}".format(data.values.namespace_suffix)
#@ image_name = "{}@{}".format(data.values.image_name, data.values.image_digest)
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: blog-frontend
  namespace: #@ namespace
spec:
  template:
    metadata:
      annotations:
        client.knative.dev/user-image: #@ image_name
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - name: blog-frontend
        image: #@ image_name
        env:
        - name: BLOGAPI_URL
          value: #@ "http://blog-api.{}.apple.maki.lol".format(namespace)
        - name: TRANSLATIONAPI_URL
          value: https://blog-translation.blog.apple.maki.lol
        - name: PROMETHEUS_URL
          value: https://prometheus.grape.maki.lol
        - name: PRERENDER_URL
          value: http://prerender.blog.svc.cluster.local:3000
        - name: JAVA_TOOL_OPTIONS
          value: "-Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP"
        - name: SERVER_PORT
          value: "${PORT}"
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: SPRING_ZIPKIN_ENABLED
          value: "true"
        - name: SPRING_ZIPKIN_SERVICE_NAME
          value: #@ data.values.organization + ":${INFO_K8S_NAMESPACE}:frontend"
        - name: SPRING_ZIPKIN_BASE_URL
          value: http://opentelemetry-collector.opentelemetry.svc.cluster.local:9411
        - name: SPRING_SLEUTH_SAMPLER_RATE
          value: "30"
        - name: SPRING_SLEUTH_WEB_ADDITIONAL_SKIP_PATTERN
          value: "/actuator.*|/static.*|/manifest.json|/proxy.*"
        - name: INFO_K8S_NAMESPACE
          value: #@ namespace
        - name: INFO_K8S_POD
          value: "${HOSTNAME}"
        - name: INFO_K8S_APP
          value: "${spring.application.name}"
        - name: INFO_JAVA_VERSION
          value: "${java.vm.version} / ${java.vm.name}"
        - name: INFO_JAVA_VENDOR
          value: "${java.vm.vendor}"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "info,health,prometheus"
        - name: MANAGEMENT_METRICS_TAGS_ORGANIZATION
          value: #@ data.values.organization
        - name: MANAGEMENT_METRICS_TAGS_KUBERNETES_NAMESPACE
          value: "${INFO_K8S_NAMESPACE}"
        - name: MANAGEMENT_METRICS_TAGS_KUBERNETES_POD_NAME
          value: "${INFO_K8S_POD}"
        - name: MANAGEMENT_METRICS_TAGS_APP
          value: "${INFO_K8S_APP}"
        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_ENABLED
          value: "false"
        - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_RSOCKET_ENABLED
          value: "false"
        - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_RSOCKET_HOST
          value: prometheus-rsocket-proxy.maki.lol
        resources:
          limits:
            memory: "200Mi"
          requests:
            memory: "200Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000