#@ load("@ytt:data", "data")
apiVersion: v1
kind: Secret
metadata:
  name: tap-tap-install-values
  namespace: tap-install
  annotations:
    kapp.k14s.io/change-group: "tap-install-values"
type: Opaque
stringData:
  #@yaml/text-templated-strings
  tap-values.yml: |
    ---
    profile: build

    ceip_policy_disclosed: true

    buildservice:
      kp_default_repository: (@= data.values.registry_credentials.server @)/(@= data.values.registry_credentials.username @)/build-service
      kp_default_repository_secret:
        name: registry-secret
        namespace: tap-install  
      #! exclude_dependencies: true

    supply_chain: testing_scanning

    ootb_supply_chain_testing_scanning:
      #! cluster_builder: base-jammy
      registry:
        server: (@= data.values.registry_credentials.server @)
        repository: (@= data.values.registry_credentials.username @)/supply-chain
      gitops:
        ssh_secret: ""
        user_name: making-bot
        user_email: makingx+bot@gmail.com
        commit_message: Bump    
        commit_strategy: pull_request
        server_address: https://github.com
        repository_owner: categolj
        repository_name: tap-gitops 
        pull_request:
          server_kind: github
          commit_branch: ""
          pull_request_title: "ready for review"
          pull_request_body: "generated by ootb_supply_chain_testing"  

    scanning:
      metadataStore:
        url: "" # Disable embedded integration since it's deprecated
    
    springboot_conventions:
      autoConfigureActuators: true
    
    namespace_provisioner:
      additional_sources:
      - path: _ytt_lib/tekton
        inline:
          paths:
            tekton-pipeline.yaml: |
              apiVersion: tekton.dev/v1beta1
              kind: Pipeline
              metadata:
                name: maven-test-pipeline
                namespace: blog
                labels:
                  apps.tanzu.vmware.com/pipeline: test
                  apps.tanzu.vmware.com/language: java
              spec:
                params:
                - name: source-url
                - name: source-revision
                - name: slack-webhook-secret
                - name: slack-test-failure-message
                workspaces:
                - name: cache
                tasks:
                - name: test
                  params:
                  - name: source-url
                    value: $(params.source-url)
                  - name: source-revision
                    value: $(params.source-revision)
                  workspaces:
                  - name: cache
                    workspace: cache
                  taskSpec:
                    volumes:
                    - name: dind-storage
                      emptyDir: { }
                    - name: dind-socket
                      emptyDir: { }
                    - name: settings-xml
                      secret:
                        secretName: settings-xml
                    params:
                    - name: source-url
                    - name: source-revision
                    workspaces:
                    - name: cache
                    sidecars:
                    - name: docker
                      image: docker:20.10-dind
                      securityContext:
                        privileged: true
                      volumeMounts:
                      - mountPath: /var/lib/docker
                        name: dind-storage
                      - mountPath: /var/run/
                        name: dind-socket
                    steps:
                    - name: test
                      image: eclipse-temurin:17
                      volumeMounts:
                      - mountPath: /var/run/
                        name: dind-socket
                      - mountPath: /opt/maven
                        name: settings-xml
                        readOnly: true
                      script: |-
                        set -ex
                        rm -rf ~/.m2
                        mkdir -p $(workspaces.cache.path)/.m2
                        ln -fs $(workspaces.cache.path)/.m2 ~/.m2
                        cd `mktemp -d`
                        curl -s $(params.source-url) | tar -m -xzvf -
                        ./mvnw clean test -V -s /opt/maven/settings.xml
                finally:
                - name: notify-test-failure
                  when:
                  - input: $(tasks.test.status)
                    operator: in
                    values: [ "Failed" ]
                  taskRef:
                    kind: ClusterTask
                    name: send-to-webhook-slack
                  params:
                  - name: webhook-secret
                    value: $(params.slack-webhook-secret)
                  - name: message
                    value: $(params.slack-test-failure-message)
    package_overlays:
    - name: tap-telemetry
      secrets:
      - name: tap-telemetry-remove
    - name: ootb-templates
      secrets:
      - name: ootb-templates-cache-workspace
    - name: ootb-supply-chain-testing-scanning
      secrets:
      - name: ootb-supply-chain-testing-scanning-remove-source-scanner
    - name: tekton-pipelines
      secrets:
      - name: tekton-pipelines-prometheus
      - name: tekton-send-to-webhook-slack

    excluded_packages:
    - grype.scanning.apps.tanzu.vmware.com
    - contour.tanzu.vmware.com