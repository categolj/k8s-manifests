apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: cloud-native-runtimes
  namespace: cloud-native-runtimes
  annotations:
    kapp.k14s.io/change-rule.upsert_cnr_sa: upsert after upserting cnr.vmware.com/cnr-sa
    kapp.k14s.io/change-rule.delete_cnr_sa: delete before deleting cnr.vmware.com/cnr-sa
    kapp.k14s.io/change-rule.delete_config: delete before deleting cnr.vnware.com/cnr-config
  labels:
    app.kubernetes.io/part-of: cloud-native-runtimes
spec:
  syncPeriod: 1h
  serviceAccountName: cnr-sa
  fetch:
  - imgpkgBundle:
      image: projects.registry.vmware.com/tanzu_serverless/release@sha256:d951d50b2212ad0923c63547008a73a95d3f8ed533335e7718fa4ebfbb829a20
  template:
  - kbld:
      paths:
      - .imgpkg/images.yml
      - config/kbld.yaml
      - config/serving
      - config/net-contour
      - config/eventing
      - config/net-certmanager
      - config/discovery
      - config/aws-event-sources
  - ytt:
      ignoreUnknownComments: true
      paths:
      - '-'
      - config/ytt/
      - config/kapp.yaml
      inline:
        pathsFrom:
        - secretRef:
            name: cnr-values
        paths:
          config-certmanager.yaml: |
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata":{"name":"config-certmanager","namespace":"knative-serving"}})
            ---
            data:
              #@overlay/match missing_ok=True
              issuerRef: |
                kind: ClusterIssuer
                name: letsencrypt-maki-lol
          config-domain.yaml: |
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata":{"name":"config-domain","namespace":"knative-serving"}})
            ---
            data:
              #@overlay/match missing_ok=True
              apple.maki.lol: ""
          config-network.yaml: |
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata":{"name":"config-network","namespace":"knative-serving"}})
            ---
            data:
              #@overlay/match missing_ok=True
              autoTLS: Enabled
              #@overlay/match missing_ok=True
              httpProtocol: Redirected
          remove-rabbitmq.yaml: |
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"rabbitmq-broker-controller","namespace":"knative-eventing"}})
            #@overlay/remove
            ---
          remove-sources.yaml: |
            #@ load("@ytt:overlay", "overlay")
            #@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"rabbitmq-webhook","namespace":"knative-sources"}})
            #@overlay/remove
            ---
            #@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"rabbitmq-controller-manager","namespace":"knative-sources"}})
            #@overlay/remove
            ---
            #@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"aws-event-sources-controller","namespace":"triggermesh"}})
            #@overlay/remove
            ---
            #@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"webhook","namespace":"vmware-sources"}})
            #@overlay/remove
            ---
  deploy:
  - kapp:
      rawOptions:
      - --wait-timeout=5m
      - --diff-changes=true
      - --diff-mask=false
      inspect:
        rawOptions:
        - --tree=true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnr-sa
  annotations:
    kapp.k14s.io/change-group: cnr.vmware.com/cnr-sa
  labels:
    app.kubernetes.io/part-of: cloud-native-runtimes
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cnr-role-binding
  annotations:
    kapp.k14s.io/change-group: cnr.vmware.com/cnr-sa
  labels:
    app.kubernetes.io/part-of: cloud-native-runtimes
subjects:
- kind: ServiceAccount
  name: cnr-sa
  namespace: cloud-native-runtimes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
