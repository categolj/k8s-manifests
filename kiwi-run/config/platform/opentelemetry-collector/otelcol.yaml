#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: opentelemetry
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.94.0
  #@yaml/text-templated-strings
  config: |
    extensions:
      basicauth/grafana_cloud:
        client_auth:
          username: (@= str(data.values.grafala_cloud_otlp.username) @)
          password: (@= data.values.grafala_cloud_otlp.password @)
      basicauth/prometheus:
        client_auth:
          username: (@= str(data.values.prometheus.username) @)
          password: (@= data.values.prometheus.password @)
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
      zipkin: {}
      k8s_events:
        auth_type: serviceAccount
      prometheus:
        config:
          global:
            evaluation_interval: 1m
            scrape_interval: 30s
            scrape_timeout: 10s
          scrape_configs:
          - job_name: kubernetes-pods
            honor_labels: true
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            follow_redirects: true
            enable_http2: true
            tls_config:
              insecure_skip_verify: true
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
              separator: ;
              regex: "true"
              replacement: $$1
              action: keep
            - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
              separator: ;
              regex: "true"
              replacement: $$1
              action: drop
            - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme
              separator: ;
              regex: (https?)
              target_label: __scheme__
              replacement: $$1
              action: replace
            - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
              separator: ;
              regex: (.+)
              target_label: __metrics_path__
              replacement: $$1
              action: replace
            - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              separator: ;
              regex: (.+?)(?::\d+)?;(\d+)
              target_label: __address__
              replacement: $$1:$$2
              action: replace
            - separator: ;
              regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
              replacement: __param_$$1
              action: labelmap
            - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_part_of
              separator: ;
              regex: (.*)
              target_label: app_kubernetes_io_part_of
              replacement: $$1
              action: replace
            - source_labels:
              - __meta_kubernetes_namespace
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels:
              - __meta_kubernetes_pod_name
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels:
              - __meta_kubernetes_pod_phase
              separator: ;
              regex: Pending|Succeeded|Failed|Completed
              replacement: $$1
              action: drop
            - regex: __meta_kubernetes_pod_label_app_kubernetes_io_component
              action: labeldrop
            - source_labels:
              - __meta_kubernetes_pod_label_app
              separator: ;
              regex: (.*)
              target_label: app
              replacement: $$1
              action: replace
            kubernetes_sd_configs:
            - role: pod
              kubeconfig_file: ""
              follow_redirects: true
              enable_http2: true
          - job_name: kube-api-server
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - follow_redirects: true
              role: endpoints
            metric_relabel_configs:
            - action: keep
              regex: default;kubernetes;https
              source_labels:
              - __meta_kubernetes_namespace
              - __meta_kubernetes_service_name
              - __meta_kubernetes_endpoint_port_name
            - action: drop
              regex: apiserver_request_duration_seconds_bucket;(0.15|0.2|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|3|3.5|4|4.5|6|7|8|9|15|25|40|50)
              source_labels:
              - __name__
              - le
            metrics_path: /metrics
            sample_limit: 10000
            scheme: http
            scrape_interval: 15s
            scrape_timeout: 10s
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
          - job_name: cadvisor
            authorization:
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              type: Bearer
            kubernetes_sd_configs:
            - role: node
            metric_relabel_configs:
            - action: labeldrop
              regex: name
            - action: drop
              regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
              replacement: $1
              separator: ;
              source_labels:
              - __name__
            - action: drop
              regex: container_fs_(io_current|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
              separator: ;
              source_labels:
              - __name__
            - action: drop
              regex: container_memory_(mapped_file|swap)
              replacement: $1
              separator: ;
              source_labels:
              - __name__
            - action: drop
              regex: container_(file_descriptors|tasks_state|threads_max)
              replacement: $1
              separator: ;
              source_labels:
              - __name__
            - action: drop
              regex: container_spec.*
              replacement: $1
              separator: ;
              source_labels:
              - __name__
            - action: drop
              regex: .+;
              replacement: $1
              separator: ;
              source_labels:
              - id
              - pod
            metrics_path: /metrics/cadvisor
            relabel_configs:
            - action: replace
              regex: (.*)
              replacement: https-metrics
              separator: ;
              target_label: endpoint
            - action: replace
              replacement: kubelet
              target_label: job
            - action: replace
              regex: (.*)
              replacement: ${1}
              separator: ;
              source_labels:
              - __meta_kubernetes_node_name
              target_label: node
            - action: replace
              regex: (.*)
              replacement: $1
              separator: ;
              source_labels:
              - __metrics_path__
              target_label: metrics_path
            sample_limit: 10000
            scheme: https
            scrape_interval: 15s
            scrape_timeout: 10s
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
    processors:
      filter:
        # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor
        error_mode: ignore
        traces:
          span:
          - name == "activator_proxy"
          - name == "throttler_try"
          - IsMatch(attributes["upstream_cluster"], "grafana/.*")
          - IsMatch(attributes["upstream_cluster"], "tap-gui/.*")
          - IsMatch(attributes["upstream_cluster"], "appsso/.*")
          - IsMatch(attributes["http.url"], "https://grafana.*")
          - IsMatch(attributes["http.url"], ".*/livez")
          - IsMatch(attributes["http.url"], ".*/readyz")
          - IsMatch(attributes["http.url"], ".*/aboutme")
          - attributes["http.route"] == "/livez"
          - attributes["http.route"] == "/readyz"
          - attributes["user_agent.original"] == "kube-probe//"
          - attributes["user_agent"] == "Knative-Ingress-Probe"
          - IsMatch(attributes["user_agent"], "kube-probe/.*")
          - IsMatch(attributes["user_agent"], "Prometheus/.*")
          - attributes["http.user_agent"] == "kube-probe//"
          - name == "OperationHandler.handle"
          - IsMatch(name, "fs .*")
      attributes:
        actions:
        - key: cluster
          value: (@= data.values.cluster.name @)
          action: upsert
      attributes/loki:
        actions:
        - key: loki.attribute.labels
          value: cluster, k8s.namespace.name
          action: upsert
        - key: loki.resource.labels
          value: k8s.object.kind, k8s.object.name
          action: upsert
      batch:
        send_batch_size: 10000
        timeout: 10s
    exporters: 
      otlphttp/grafana_cloud:
        endpoint: (@= data.values.grafala_cloud_otlp.url @)
        auth:
          authenticator: basicauth/grafana_cloud
      prometheusremotewrite:
        endpoint: (@= data.values.prometheus.url @)
        auth:
          authenticator: basicauth/prometheus
        tls:
          insecure_skip_verify: true
      zipkin:
        endpoint: (@= data.values.zipkin.url @)
      debug:
        verbosity: detailed
        sampling_initial: 5
        sampling_thereafter: 200
    service:
      extensions:
      - basicauth/grafana_cloud
      - basicauth/prometheus
      pipelines:
        traces:
          receivers:
          - otlp
          - zipkin
          processors:
          - filter
          - attributes
          - batch
          exporters:
          - otlphttp/grafana_cloud
        logs/k8s_events:
          receivers:
          - k8s_events
          processors:
          - batch
          - attributes
          - attributes/loki
          exporters:
          - otlphttp/grafana_cloud
        metrics:
          receivers:
          - prometheus
          processors:
          - batch
          - attributes
          exporters:
          - prometheusremotewrite