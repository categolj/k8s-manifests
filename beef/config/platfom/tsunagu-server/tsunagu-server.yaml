#@ load("@ytt:data", "data")

apiVersion: v1
kind: Namespace
metadata:
  name: tsunagu
---
apiVersion: v1
kind: Service
metadata:
  name: tsunagu-server
  namespace: tsunagu
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: actuator
    port: 9090
  selector:
    app: tsunagu-server
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsunagu-server
  namespace: tsunagu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tsunagu-server
  template:
    metadata:
      labels:
        app: tsunagu-server
    spec:
      containers:
      - name: tsunagu-server
        image: ghcr.io/making/tsunagu-server:sd-2022-04
        env:
        - name: SPRING_CONFIG_IMPORT
          value: configtree:/config/
        ports:
        - containerPort: 8080
        - containerPort: 9090
        resources:
          limits:
            memory: "200Mi"
          requests:
            memory: "200Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 9090
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 9090
        volumeMounts:
        - name: tsunagu
          mountPath: /config/tsunagu
          readOnly: true
      volumes:
      - name: tsunagu
        secret:
          secretName: tsunagu
---
apiVersion: v1
kind: Secret
metadata:
  name: tsunagu
  namespace: tsunagu
type: Opaque
stringData:
  token: #@ data.values.tsunagu.token
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: tsunagu
  namespace: tsunagu
spec:
  virtualhost:
    fqdn: tsunagu.ik.am
    tls:
      secretName: tsunagu-ik-am-tls
  routes:
  - conditions:
    - prefix: /tsunagu
    enableWebsockets: true
    services:
    - name: tsunagu-server
      port: 80
  - conditions:
    - prefix: /rsocket
    enableWebsockets: true
    services:
    - name: tsunagu-server
      port: 80
  - conditions:
    - prefix: /
    services:
    - name: tsunagu-server
      port: 80
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: tsunagu-ik-am
  namespace: tsunagu
spec:
  secretName: tsunagu-ik-am-tls
  issuerRef:
    name: letsencrypt-ik-am
    kind: ClusterIssuer
  dnsNames:
  - tsunagu.ik.am
