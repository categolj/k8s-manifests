#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: opentelemetry
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.94.0
  #@yaml/text-templated-strings
  config: |
    extensions:
      basicauth/grafana_cloud:
        client_auth:
          username: (@= str(data.values.grafala_cloud_otlp.username) @)
          password: (@= data.values.grafala_cloud_otlp.password @)
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
      zipkin: {}
      k8s_events:
        auth_type: serviceAccount
    processors:
      filter:
        # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor
        error_mode: ignore
        traces:
          span:
          - IsMatch(attributes["upstream_cluster"], "grafana/.*")
          - IsMatch(attributes["upstream_cluster"], "tap-gui/.*")
          - IsMatch(attributes["upstream_cluster"], "appsso/.*")
          - IsMatch(attributes["http.url"], "https://grafana.*")
          - IsMatch(attributes["http.url"], ".*/livez")
          - IsMatch(attributes["http.url"], ".*/readyz")
          - IsMatch(attributes["http.url"], ".*/aboutme")
          - attributes["http.route"] == "/livez"
          - attributes["http.route"] == "/readyz"
          - attributes["user_agent.original"] == "kube-probe//"
          - attributes["user_agent"] == "Knative-Ingress-Probe"
          - IsMatch(attributes["user_agent"], "kube-probe/.*")
          - attributes["http.user_agent"] == "kube-probe//"
          - name == "OperationHandler.handle"
          - IsMatch(name, "fs .*")
      attributes:
        actions:
        - key: cluster
          value: (@= data.values.cluster.name @)
          action: upsert
      attributes/loki:
        actions:
        - key: loki.attribute.labels
          value: cluster,attributes_k8s_namespace_name,body
          action: upsert
        - key: loki.resource.labels
          value: resources_k8s_object_kind,resources_k8s_object_name
          action: upsert
      batch:
        send_batch_size: 10000
        timeout: 10s
    exporters: 
      otlphttp/grafana_cloud:
        endpoint: (@= data.values.grafala_cloud_otlp.url @)
        auth:
          authenticator: basicauth/grafana_cloud
      debug:
        verbosity: detailed
        sampling_initial: 5
        sampling_thereafter: 200
    service:
      extensions:
      - basicauth/grafana_cloud
      pipelines:
        traces:
          receivers:
          - otlp
          - zipkin
          processors:
          - filter
          - attributes
          - batch
          exporters:
          - otlphttp/grafana_cloud
        logs/k8s_events:
          receivers:
          - k8s_events
          processors:
          - batch
          - attributes
          - attributes/loki
          exporters:
          - otlphttp/grafana_cloud