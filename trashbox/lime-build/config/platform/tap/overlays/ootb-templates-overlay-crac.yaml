apiVersion: v1
kind: Secret
metadata:
  name: ootb-templates-overlay-crac
  namespace: tap-install
  annotations:
    kapp.k14s.io/change-group: "tap-overlays"
type: Opaque
stringData:
  overlay-crac.yml: |
    #@ load("@ytt:overlay", "overlay")
    #@ load("@ytt:data", "data")
    #@overlay/match by=overlay.subset({"kind":"ClusterConfigTemplate", "metadata": {"name": "config-template"}})
    ---
    spec:
      #@overlay/replace via=lambda left, right: "{}\n{}".format(left, '\n'.join(['  {}'.format(x) for x in right.split('\n')]))
      ytt: |
        #@yaml/text-templated-strings
        crac.yml: |
          (@ if hasattr(data.values.params, "crac") and data.values.params.crac : @)
          #@ load("@ytt:overlay", "overlay")
          #@overlay/match by=overlay.subset({"kind": "Service"})
          ---
          spec:
            #@overlay/match-child-defaults missing_ok=True
            template:
              spec:
                containers:
                #@overlay/match by="name"
                - name: workload
                  securityContext:
                    runAsUser: 0
                    capabilities:
                      add:
                      - CHECKPOINT_RESTORE
                      - NET_ADMIN
                      - SYS_PTRACE
                  env:
                  #@overlay/match by="name"
                  - name: REVISION_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.labels['serving.knative.dev/revision']
                  #@overlay/match by="name"
                  - name: REVISION_UID
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.labels['serving.knative.dev/revisionUID']
                  #@overlay/match by="name"
                  - name: CHECKPOINT_RESTORE_FILES_DIR
                    value: /var/checkpoint-restore/$(REVISION_NAME)/$(REVISION_UID)
                  volumeMounts:
                  - name: checkpoint-restore-cache
                    mountPath: /var/checkpoint-restore
                volumes:
                #@overlay/match by="name"
                - name: checkpoint-restore-cache
                  persistentVolumeClaim:
                    claimName: (@= data.values.workload.metadata.name @)
          (@ end @)
        #@yaml/text-templated-strings
        pvc.yaml: |
          (@ if hasattr(data.values.params, "crac") and data.values.params.crac : @)
          ---
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: (@= data.values.workload.metadata.name @)
          spec:
            accessModes:
            - ReadWriteMany
            storageClassName: nfs
            resources:
              requests:
                storage: 500Mi
          (@ end @)