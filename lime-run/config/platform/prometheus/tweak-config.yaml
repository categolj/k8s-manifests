#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:yaml", "yaml")

#@ def config_overlay():
#@overlay/remove
rule_files:
scrape_configs:
#@overlay/match by=overlay.or_op(overlay.subset({"job_name": "kubernetes-service-endpoints"}), overlay.subset({"job_name": "kubernetes-service-endpoints-slow"})), expects="1+"
- relabel_configs:
  #@overlay/match by=overlay.index(0)
  #@overlay/insert after=True
  - action: drop
    regex: (.+)
    source_labels:
    - __meta_kubernetes_service_label_networking_internal_knative_dev_serverlessservice
  #@overlay/match by=overlay.subset({"action": "labelmap", "regex":"__meta_kubernetes_service_label_(.+)"})
  #@overlay/replace
  - action: replace
    source_labels:
    - __meta_kubernetes_service_label_app_kubernetes_io_part_of
    target_label: app_kubernetes_io_part_of
  - action: replace
    source_labels:
    - __meta_kubernetes_service_label_app_kubernetes_io_component
    target_label: app_kubernetes_io_component
  - action: replace
    source_labels:
    - __meta_kubernetes_service_label_app
    target_label: app
#@overlay/match by=overlay.or_op(overlay.subset({"job_name": "kubernetes-pods"}), overlay.subset({"job_name": "kubernetes-pods-slow"})), expects="1+"
- relabel_configs:
  #@overlay/match by=overlay.subset({"action": "labelmap", "regex":"__meta_kubernetes_pod_label_(.+)"})
  #@overlay/replace
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_label_app_kubernetes_io_part_of
    target_label: app_kubernetes_io_part_of
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_label_app_kubernetes_io_component
    target_label: app_kubernetes_io_component
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_label_app
    target_label: app
#@ end

#@ def config_overlay2():
#@overlay/remove
rule_files:
#@overlay/replace
scrape_configs:
- job_name: kubernetes-pods
  honor_labels: true
  honor_timestamps: true
  scrape_interval: 30s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  follow_redirects: true
  enable_http2: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    separator: ;
    regex: "true"
    replacement: $1
    action: keep
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
    separator: ;
    regex: "true"
    replacement: $1
    action: drop
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
    separator: ;
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    separator: ;
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
    separator: ;
    regex: (.+?)(?::\d+)?;(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - separator: ;
    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
    replacement: __param_$1
    action: labelmap
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_part_of]
    separator: ;
    regex: (.*)
    target_label: app_kubernetes_io_part_of
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    separator: ;
    regex: (.*)
    target_label: namespace
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_name]
    separator: ;
    regex: (.*)
    target_label: pod
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_phase]
    separator: ;
    regex: Pending|Succeeded|Failed|Completed
    replacement: $1
    action: drop
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
    separator: ;
    regex: (.*)
    target_label: app_kubernetes_io_component
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    separator: ;
    regex: (.*)
    target_label: app
    replacement: $1
    action: replace
  kubernetes_sd_configs:
  - role: pod
    kubeconfig_file: ""
    follow_redirects: true
    enable_http2: true
#@ end

#@overlay/match by=overlay.subset({"kind":"ConfigMap","metadata":{"name":"prometheus-server"}})
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/versioned: ""
data:
  #@overlay/replace via=lambda left,right: yaml.encode(overlay.apply(yaml.decode(left), config_overlay2()))
  prometheus.yml: